
# REMEMBER TO UNLINK sites-enabled/default

upstream channels-backend {
	 server localhost:8001;
}

server {
        listen 80 default_server;

        return 301 https://$host$request_uri;
}

server {
	    if ($host != "binoculars.live") {
       	    return 444;
	    }

        listen 443 ssl http2 default_server;
        index index.html index.htm index.nginx-debian.html;

        server_name binoculars.live;

	    set $project_name binocularslive;
	    set $project_dir /home/ubuntu/$project_name;

    	location = /favicon.ico { access_log off; log_not_found off; }
        location /ads.txt {
            root $proejct_dir/static;
        }
    	location /static/ {
    	    root $project_dir;
    	}
	    location /media/ {
	        root $project_dir;
	    }

       	location /ws/ {
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_redirect off;
            proxy_pass http://127.0.0.1:8001;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host $server_name;
       	}

    	location / {
    	    include proxy_params;
    	    proxy_pass http://unix:$project_dir/$project_name.sock;
    	}

    # listen [::]:443 ssl ipv6only=on; # managed by Certbot
    #listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/binoculars.live/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/binoculars.live/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}



